// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/interface/validator/validator.go

// Package mock_validator is a generated GoMock package.
package mock_validator

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStructLevelValidator is a mock of StructLevelValidator interface.
type MockStructLevelValidator struct {
	ctrl     *gomock.Controller
	recorder *MockStructLevelValidatorMockRecorder
}

// MockStructLevelValidatorMockRecorder is the mock recorder for MockStructLevelValidator.
type MockStructLevelValidatorMockRecorder struct {
	mock *MockStructLevelValidator
}

// NewMockStructLevelValidator creates a new mock instance.
func NewMockStructLevelValidator(ctrl *gomock.Controller) *MockStructLevelValidator {
	mock := &MockStructLevelValidator{ctrl: ctrl}
	mock.recorder = &MockStructLevelValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStructLevelValidator) EXPECT() *MockStructLevelValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method.
func (m *MockStructLevelValidator) Validate() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockStructLevelValidatorMockRecorder) Validate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockStructLevelValidator)(nil).Validate))
}
